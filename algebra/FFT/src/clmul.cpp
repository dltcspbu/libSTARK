#ifndef _MY_CLMUL_
#define _MY_CLMUL_

const uint64_t TWO_POWER_63 = 0x8000000000000000;
inline void _My_clmulepi64_si128(const uint64_t* a, const uint64_t* b, const int imm8, uint64_t* dst) {

	uint64_t a64, b64;
	a64 = ((imm8 & 1) == 0 ? a[0] : a[1]);
	b64 = ((imm8 & 16) == 0 ? b[0] : b[1]);

	dst[0] = ((a64 & 1) > 0 ? b64 : 0);
	dst[1] = 0;

	    //0
    if ((a64 & 2) > 0) {
        dst[0] ^= b64 % 9223372036854775808 * 2;
        dst[1] ^= b64 / 9223372036854775808;
    }
    //1
    if ((a64 & 4) > 0) {
        dst[0] ^= b64 % 4611686018427387904 * 4;
        dst[1] ^= b64 / 4611686018427387904;
    }
    //2
    if ((a64 & 8) > 0) {
        dst[0] ^= b64 % 2305843009213693952 * 8;
        dst[1] ^= b64 / 2305843009213693952;
    }
    //3
    if ((a64 & 16) > 0) {
        dst[0] ^= b64 % 1152921504606846976 * 16;
        dst[1] ^= b64 / 1152921504606846976;
    }
    //4
    if ((a64 & 32) > 0) {
        dst[0] ^= b64 % 576460752303423488 * 32;
        dst[1] ^= b64 / 576460752303423488;
    }
    //5
    if ((a64 & 64) > 0) {
        dst[0] ^= b64 % 288230376151711744 * 64;
        dst[1] ^= b64 / 288230376151711744;
    }
    //6
    if ((a64 & 128) > 0) {
        dst[0] ^= b64 % 144115188075855872 * 128;
        dst[1] ^= b64 / 144115188075855872;
    }
    //7
    if ((a64 & 256) > 0) {
        dst[0] ^= b64 % 72057594037927936 * 256;
        dst[1] ^= b64 / 72057594037927936;
    }
    //8
    if ((a64 & 512) > 0) {
        dst[0] ^= b64 % 36028797018963968 * 512;
        dst[1] ^= b64 / 36028797018963968;
    }
    //9
    if ((a64 & 1024) > 0) {
        dst[0] ^= b64 % 18014398509481984 * 1024;
        dst[1] ^= b64 / 18014398509481984;
    }
    //10
    if ((a64 & 2048) > 0) {
        dst[0] ^= b64 % 9007199254740992 * 2048;
        dst[1] ^= b64 / 9007199254740992;
    }
    //11
    if ((a64 & 4096) > 0) {
        dst[0] ^= b64 % 4503599627370496 * 4096;
        dst[1] ^= b64 / 4503599627370496;
    }
    //12
    if ((a64 & 8192) > 0) {
        dst[0] ^= b64 % 2251799813685248 * 8192;
        dst[1] ^= b64 / 2251799813685248;
    }
    //13
    if ((a64 & 16384) > 0) {
        dst[0] ^= b64 % 1125899906842624 * 16384;
        dst[1] ^= b64 / 1125899906842624;
    }
    //14
    if ((a64 & 32768) > 0) {
        dst[0] ^= b64 % 562949953421312 * 32768;
        dst[1] ^= b64 / 562949953421312;
    }
    //15
    if ((a64 & 65536) > 0) {
        dst[0] ^= b64 % 281474976710656 * 65536;
        dst[1] ^= b64 / 281474976710656;
    }
    //16
    if ((a64 & 131072) > 0) {
        dst[0] ^= b64 % 140737488355328 * 131072;
        dst[1] ^= b64 / 140737488355328;
    }
    //17
    if ((a64 & 262144) > 0) {
        dst[0] ^= b64 % 70368744177664 * 262144;
        dst[1] ^= b64 / 70368744177664;
    }
    //18
    if ((a64 & 524288) > 0) {
        dst[0] ^= b64 % 35184372088832 * 524288;
        dst[1] ^= b64 / 35184372088832;
    }
    //19
    if ((a64 & 1048576) > 0) {
        dst[0] ^= b64 % 17592186044416 * 1048576;
        dst[1] ^= b64 / 17592186044416;
    }
    //20
    if ((a64 & 2097152) > 0) {
        dst[0] ^= b64 % 8796093022208 * 2097152;
        dst[1] ^= b64 / 8796093022208;
    }
    //21
    if ((a64 & 4194304) > 0) {
        dst[0] ^= b64 % 4398046511104 * 4194304;
        dst[1] ^= b64 / 4398046511104;
    }
    //22
    if ((a64 & 8388608) > 0) {
        dst[0] ^= b64 % 2199023255552 * 8388608;
        dst[1] ^= b64 / 2199023255552;
    }
    //23
    if ((a64 & 16777216) > 0) {
        dst[0] ^= b64 % 1099511627776 * 16777216;
        dst[1] ^= b64 / 1099511627776;
    }
    //24
    if ((a64 & 33554432) > 0) {
        dst[0] ^= b64 % 549755813888 * 33554432;
        dst[1] ^= b64 / 549755813888;
    }
    //25
    if ((a64 & 67108864) > 0) {
        dst[0] ^= b64 % 274877906944 * 67108864;
        dst[1] ^= b64 / 274877906944;
    }
    //26
    if ((a64 & 134217728) > 0) {
        dst[0] ^= b64 % 137438953472 * 134217728;
        dst[1] ^= b64 / 137438953472;
    }
    //27
    if ((a64 & 268435456) > 0) {
        dst[0] ^= b64 % 68719476736 * 268435456;
        dst[1] ^= b64 / 68719476736;
    }
    //28
    if ((a64 & 536870912) > 0) {
        dst[0] ^= b64 % 34359738368 * 536870912;
        dst[1] ^= b64 / 34359738368;
    }
    //29
    if ((a64 & 1073741824) > 0) {
        dst[0] ^= b64 % 17179869184 * 1073741824;
        dst[1] ^= b64 / 17179869184;
    }
    //30
    if ((a64 & 2147483648) > 0) {
        dst[0] ^= b64 % 8589934592 * 2147483648;
        dst[1] ^= b64 / 8589934592;
    }
    //31
    if ((a64 & 4294967296) > 0) {
        dst[0] ^= b64 % 4294967296 * 4294967296;
        dst[1] ^= b64 / 4294967296;
    }
    //32
    if ((a64 & 8589934592) > 0) {
        dst[0] ^= b64 % 2147483648 * 8589934592;
        dst[1] ^= b64 / 2147483648;
    }
    //33
    if ((a64 & 17179869184) > 0) {
        dst[0] ^= b64 % 1073741824 * 17179869184;
        dst[1] ^= b64 / 1073741824;
    }
    //34
    if ((a64 & 34359738368) > 0) {
        dst[0] ^= b64 % 536870912 * 34359738368;
        dst[1] ^= b64 / 536870912;
    }
    //35
    if ((a64 & 68719476736) > 0) {
        dst[0] ^= b64 % 268435456 * 68719476736;
        dst[1] ^= b64 / 268435456;
    }
    //36
    if ((a64 & 137438953472) > 0) {
        dst[0] ^= b64 % 134217728 * 137438953472;
        dst[1] ^= b64 / 134217728;
    }
    //37
    if ((a64 & 274877906944) > 0) {
        dst[0] ^= b64 % 67108864 * 274877906944;
        dst[1] ^= b64 / 67108864;
    }
    //38
    if ((a64 & 549755813888) > 0) {
        dst[0] ^= b64 % 33554432 * 549755813888;
        dst[1] ^= b64 / 33554432;
    }
    //39
    if ((a64 & 1099511627776) > 0) {
        dst[0] ^= b64 % 16777216 * 1099511627776;
        dst[1] ^= b64 / 16777216;
    }
    //40
    if ((a64 & 2199023255552) > 0) {
        dst[0] ^= b64 % 8388608 * 2199023255552;
        dst[1] ^= b64 / 8388608;
    }
    //41
    if ((a64 & 4398046511104) > 0) {
        dst[0] ^= b64 % 4194304 * 4398046511104;
        dst[1] ^= b64 / 4194304;
    }
    //42
    if ((a64 & 8796093022208) > 0) {
        dst[0] ^= b64 % 2097152 * 8796093022208;
        dst[1] ^= b64 / 2097152;
    }
    //43
    if ((a64 & 17592186044416) > 0) {
        dst[0] ^= b64 % 1048576 * 17592186044416;
        dst[1] ^= b64 / 1048576;
    }
    //44
    if ((a64 & 35184372088832) > 0) {
        dst[0] ^= b64 % 524288 * 35184372088832;
        dst[1] ^= b64 / 524288;
    }
    //45
    if ((a64 & 70368744177664) > 0) {
        dst[0] ^= b64 % 262144 * 70368744177664;
        dst[1] ^= b64 / 262144;
    }
    //46
    if ((a64 & 140737488355328) > 0) {
        dst[0] ^= b64 % 131072 * 140737488355328;
        dst[1] ^= b64 / 131072;
    }
    //47
    if ((a64 & 281474976710656) > 0) {
        dst[0] ^= b64 % 65536 * 281474976710656;
        dst[1] ^= b64 / 65536;
    }
    //48
    if ((a64 & 562949953421312) > 0) {
        dst[0] ^= b64 % 32768 * 562949953421312;
        dst[1] ^= b64 / 32768;
    }
    //49
    if ((a64 & 1125899906842624) > 0) {
        dst[0] ^= b64 % 16384 * 1125899906842624;
        dst[1] ^= b64 / 16384;
    }
    //50
    if ((a64 & 2251799813685248) > 0) {
        dst[0] ^= b64 % 8192 * 2251799813685248;
        dst[1] ^= b64 / 8192;
    }
    //51
    if ((a64 & 4503599627370496) > 0) {
        dst[0] ^= b64 % 4096 * 4503599627370496;
        dst[1] ^= b64 / 4096;
    }
    //52
    if ((a64 & 9007199254740992) > 0) {
        dst[0] ^= b64 % 2048 * 9007199254740992;
        dst[1] ^= b64 / 2048;
    }
    //53
    if ((a64 & 18014398509481984) > 0) {
        dst[0] ^= b64 % 1024 * 18014398509481984;
        dst[1] ^= b64 / 1024;
    }
    //54
    if ((a64 & 36028797018963968) > 0) {
        dst[0] ^= b64 % 512 * 36028797018963968;
        dst[1] ^= b64 / 512;
    }
    //55
    if ((a64 & 72057594037927936) > 0) {
        dst[0] ^= b64 % 256 * 72057594037927936;
        dst[1] ^= b64 / 256;
    }
    //56
    if ((a64 & 144115188075855872) > 0) {
        dst[0] ^= b64 % 128 * 144115188075855872;
        dst[1] ^= b64 / 128;
    }
    //57
    if ((a64 & 288230376151711744) > 0) {
        dst[0] ^= b64 % 64 * 288230376151711744;
        dst[1] ^= b64 / 64;
    }
    //58
    if ((a64 & 576460752303423488) > 0) {
        dst[0] ^= b64 % 32 * 576460752303423488;
        dst[1] ^= b64 / 32;
    }
    //59
    if ((a64 & 1152921504606846976) > 0) {
        dst[0] ^= b64 % 16 * 1152921504606846976;
        dst[1] ^= b64 / 16;
    }
    //60
    if ((a64 & 2305843009213693952) > 0) {
        dst[0] ^= b64 % 8 * 2305843009213693952;
        dst[1] ^= b64 / 8;
    }
    //61
    if ((a64 & 4611686018427387904) > 0) {
        dst[0] ^= b64 % 4 * 4611686018427387904;
        dst[1] ^= b64 / 4;
    }

	if ((a64 & TWO_POWER_63) > 0) {
		dst[0] ^= (b64 % 2) * TWO_POWER_63;
		dst[1] ^= b64 / 2;
	}
}

#endif